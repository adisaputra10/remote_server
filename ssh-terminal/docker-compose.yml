version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: goteleport-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: goteleport
      MYSQL_USER: goteleport
      MYSQL_PASSWORD: goteleport123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - goteleport-network

  # PostgreSQL Database  
  postgres:
    image: postgres:15
    container_name: goteleport-postgres
    environment:
      POSTGRES_DB: goteleport
      POSTGRES_USER: goteleport
      POSTGRES_PASSWORD: goteleport123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - goteleport-network

  # GoTeleport Server
  goteleport-server:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: goteleport-server
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=goteleport
      - DB_USER=goteleport
      - DB_PASS=goteleport123
      - SERVER_PORT=8081
      - SERVER_WS_PORT=8082
    ports:
      - "8081:8081"
      - "8082:8082"
    volumes:
      - ./goteleport.db:/app/data/goteleport.db
      - ./server.log:/app/data/server.log
    depends_on:
      - mysql
      - postgres
    networks:
      - goteleport-network

  # GoTeleport Agent
  goteleport-agent:
    build: 
      context: .
      dockerfile: Dockerfile.agent
    container_name: goteleport-agent
    environment:
      - AGENT_PORT=8080
      - AGENT_TOKEN=your-agent-token
      - SERVER_HOST=goteleport-server
      - SERVER_PORT=8081
      - DB_HOST=mysql
      - DB_PORT=3306
      - PG_HOST=postgres
      - PG_PORT=5432
    ports:
      - "8080:8080"
      - "3308:3308"  # MySQL proxy
      - "5435:5435"  # PostgreSQL proxy
    volumes:
      - ./agent-db.log:/app/data/agent-db.log
    depends_on:
      - goteleport-server
      - mysql
      - postgres
    networks:
      - goteleport-network

  # Frontend
  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    container_name: goteleport-frontend
    ports:
      - "80:80"
    environment:
      - VITE_BE_URL=http://localhost:8081
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - goteleport-server
    networks:
      - goteleport-network

volumes:
  mysql_data:
  postgres_data:

networks:
  goteleport-network:
    driver: bridge
